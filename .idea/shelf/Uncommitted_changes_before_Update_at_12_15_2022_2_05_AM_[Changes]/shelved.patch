Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTonomous.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.MF;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\r\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\r\n\r\n@Autonomous(name = \"Read/Park\")\r\n\r\npublic class MFTonomous extends LinearOpMode {\r\n\r\n    ColorCam colorCam = new ColorCam();\r\n\r\n    @Override public void runOpMode() throws InterruptedException {\r\n        waitForStart();\r\n        colorCam.cameraInit(hardwareMap);\r\n        telemetry.addData(\"color\", colorCam.getColor());\r\n        telemetry.update();\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTonomous.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTonomous.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTonomous.java	(revision 6884e118b11633504d11291c03a4c3d72397d4ea)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTonomous.java	(date 1670981786763)
@@ -10,10 +10,12 @@
     ColorCam colorCam = new ColorCam();
 
     @Override public void runOpMode() throws InterruptedException {
-        waitForStart();
         colorCam.cameraInit(hardwareMap);
         telemetry.addData("color", colorCam.getColor());
+        telemetry.addData("hue", colorCam.getHue());
         telemetry.update();
 
+        waitForStart();
+
     }
 }
\ No newline at end of file
Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTeleop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.MF;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.OpMode;\r\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\r\nimport com.qualcomm.robotcore.hardware.Servo;\r\nimport com.qualcomm.robotcore.hardware.DcMotor;\r\nimport com.qualcomm.robotcore.hardware.TouchSensor;\r\n\r\nimport org.firstinspires.ftc.teamcode.Controller;\r\n\r\n@TeleOp(name = \"MF TeleOp\")\r\npublic class MFTeleop extends OpMode {\r\n\r\n    private MFDrive drive;\r\n    private Controller controller;\r\n//    private Controller controller2;\r\n    private TouchSensor liftLimit;\r\n    private Servo clawServo;\r\n    private DcMotor liftMotor;\r\n    private DcMotor liftMotor2;\r\n    private DcMotor frontLeft;\r\n    private DcMotor frontRight;\r\n    private DcMotor backLeft;\r\n    private DcMotor backRight;\r\n\r\n    public MFTeleop() {\r\n    }\r\n\r\n\r\n    @Override\r\n    public void init() {\r\n        drive = new MFDrive(this, hardwareMap);\r\n        controller = new Controller(gamepad1);\r\n//        controller2 = new Controller(gamepad2);\r\n        liftLimit = hardwareMap.get(TouchSensor.class, \"liftLimit\");\r\n        liftMotor = hardwareMap.get(DcMotor.class, \"liftMotor\");\r\n        liftMotor2 = hardwareMap.get(DcMotor.class, \"liftMotor2\");\r\n        clawServo = hardwareMap.get(Servo.class, \"clawServo\");\r\n        frontLeft = hardwareMap.get(DcMotor.class, \"frontLeft\");\r\n        frontRight = hardwareMap.get(DcMotor.class, \"frontRight\");\r\n        backLeft = hardwareMap.get(DcMotor.class, \"backLeft\");\r\n        backRight = hardwareMap.get(DcMotor.class, \"backRight\");\r\n        liftMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        liftMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n        frontLeft.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        frontLeft.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n        frontRight.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        frontRight.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n        backLeft.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        backLeft.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n        backRight.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        backRight.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n    }\r\n\r\n    @Override\r\n    public void loop() {\r\n        int limit;\r\n        if (liftLimit.isPressed()) {\r\n            limit = 1;\r\n        } else {\r\n            limit = 0;\r\n        }\r\n        telemetry.addData(\"LiftLimit\", limit);\r\n        telemetry.addData(\"LiftEncdr\", liftMotor.getCurrentPosition());\r\n        telemetry.addData(\"DriveEncdrFL\", frontLeft.getCurrentPosition());\r\n        telemetry.addData(\"DriveEncdrFR\", frontRight.getCurrentPosition());\r\n        telemetry.addData(\"DriveEncdrBL\", backLeft.getCurrentPosition());\r\n        telemetry.addData(\"DriveEncdrBR\", backRight.getCurrentPosition());\r\n        telemetry.update();\r\n        controller.update();\r\n        if (controller.rightStickButton()) {\r\n            drive.drive(-controller.left_stick_x*1/2, -controller.left_stick_y*1/2, -controller.right_stick_x);\r\n        } else {\r\n            drive.drive(-controller.left_stick_x, -controller.left_stick_y, -controller.right_stick_x);\r\n        }\r\n//        drive.drive(-controller.left_stick_x, -controller.left_stick_y, -controller.right_stick_x);\r\n\r\n//        telemetry.addData(\"gyro\", gyrog)\r\n\r\n        controller.update();\r\n//        controller2.update();\r\n        if (controller.dpadUp()) {\r\n            if (liftMotor.getCurrentPosition() < -3862) {\r\n                liftMotor.setPower(0);\r\n                liftMotor2.setPower(0);\r\n            } else {\r\n                liftMotor.setPower(-1);\r\n                liftMotor2.setPower(1);\r\n            }\r\n        } else if (controller.dpadDown()) {\r\n            if (liftLimit.isPressed()) {\r\n                liftMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n                liftMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n                liftMotor.setPower(0);\r\n                liftMotor2.setPower(0);\r\n            } else {\r\n                liftMotor.setPower(0.5);\r\n                liftMotor2.setPower(-0.5);\r\n            }\r\n        } else {\r\n            liftMotor.setPower(0);\r\n            liftMotor2.setPower(0);\r\n        }\r\n//\r\n//        if (controller2.dpadUp()) {\r\n//            if (liftMotor.getCurrentPosition() < -3862) {\r\n//                liftMotor.setPower(0);\r\n//                liftMotor2.setPower(0);\r\n//            } else {\r\n//                liftMotor.setPower(-1);\r\n//                liftMotor2.setPower(1);\r\n//            }\r\n//        } else if (controller2.dpadDown()) {\r\n//            if (liftLimit.isPressed()) {\r\n//                liftMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n//                liftMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);\r\n//                liftMotor.setPower(0);\r\n//                liftMotor2.setPower(0);\r\n//            } else {\r\n//                liftMotor.setPower(0.5);\r\n//                liftMotor2.setPower(-0.5);\r\n//            }\r\n//        } else {\r\n//            liftMotor.setPower(0);\r\n//            liftMotor2.setPower(0);\r\n//        }\r\n        if (controller.AOnce()) {\r\n            clawServo.setPosition(0);\r\n        } else if (controller.BOnce()) {\r\n            clawServo.setPosition(0.65);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTeleop.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTeleop.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTeleop.java	(revision 6884e118b11633504d11291c03a4c3d72397d4ea)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/MF/MFTeleop.java	(date 1670648535393)
@@ -101,29 +101,7 @@
             liftMotor.setPower(0);
             liftMotor2.setPower(0);
         }
-//
-//        if (controller2.dpadUp()) {
-//            if (liftMotor.getCurrentPosition() < -3862) {
-//                liftMotor.setPower(0);
-//                liftMotor2.setPower(0);
-//            } else {
-//                liftMotor.setPower(-1);
-//                liftMotor2.setPower(1);
-//            }
-//        } else if (controller2.dpadDown()) {
-//            if (liftLimit.isPressed()) {
-//                liftMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
-//                liftMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
-//                liftMotor.setPower(0);
-//                liftMotor2.setPower(0);
-//            } else {
-//                liftMotor.setPower(0.5);
-//                liftMotor2.setPower(-0.5);
-//            }
-//        } else {
-//            liftMotor.setPower(0);
-//            liftMotor2.setPower(0);
-//        }
+
         if (controller.AOnce()) {
             clawServo.setPosition(0);
         } else if (controller.BOnce()) {
